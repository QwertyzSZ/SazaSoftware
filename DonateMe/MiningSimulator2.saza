if getgenv().SZKey == nil then
    getgenv().SZKey = ""
 end
 
 u21312 = function(egfa,gea,st,ge)
    if not egfa and gea and type(st) == "string" and not ge then
        repeat wait() until game:IsLoaded()
        repeat wait() until game.Players
        repeat wait() until game.Players.LocalPlayer
        repeat wait() until game.ReplicatedStorage        
        repeat wait() until game.Players.LocalPlayer:FindFirstChild("PlayerGui");
        
        -- Variable
        local nextTeleport = queue_on_teleport or syn.queue_on_teleport
        local TweenService = game:GetService("TweenService")
        local Mod = require(game:GetService("ReplicatedStorage").SharedModules.ChunkUtil)
        local Modd = require(game:GetService("ReplicatedStorage").ClientModules.Utility.Helpers.SetWorld)
        local Moddd = require(game:GetService("ReplicatedStorage").SharedModules.Helpers.GetWorld)
        local plr = game:GetService("Players").LocalPlayer
        local reps = game:GetService("ReplicatedStorage")
        local wrk = game:GetService("Workspace")
        local PlaceID = game.PlaceId
        local foundAnything = ""
        local actualHour = os.date("!*t").hour
        local Deleted = false
        local gameName = "⛏️Mining Simulator 2"
        local rebirthlabel;
        local dangermeterlabel;
        local antifall = true
        local noclipchest = nil
        local noclipegg = nil
        local noclipore = nil
        local dtext
        local rtext
        
        -- Global..
        
        -- Tables
        local AllIDs = {}
        local sellTable = {}
        local oreTable = {}
        local eggTable = {}
        local chestTable = {"Wood", "Silver", "Gold", "Epic", "Legendary"}
        local codeTable = {"Release", "FreeEgg", "Gems", "RareCrate", "FreeGems", "Trading"}
        local areaTable = {}
        
        for _, v in next, game:GetService("Workspace").Checkpoints:GetChildren() do
            table.insert(areaTable, v.Name)
        end
        
        for i,v in pairs(wrk.Teleports:GetChildren()) do
            if string.find(v.Name, "Sell") then
                local newname = string.split(v.Name, "Sell")[1]
                table.insert(sellTable, newname)
            end
        end
        
        for _, v in next, game:GetService("ReplicatedStorage").Assets.BlockDecorations:GetChildren() do
            table.insert(oreTable, v.Name)
        end
        
        
        for i,v in next, wrk.Eggs:GetChildren() do
            table.insert(eggTable, v.Name.."-Price : $"..v.Price.SurfaceGui.Label.Text)
        end
        
        
        -- Functions
        
        function shop()
            local Site;
            if foundAnything == "" then
                Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
            else
                Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
            end
            local ID = ""
            if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
                foundAnything = Site.nextPageCursor
            end
            local num = 0;
            for i,v in pairs(Site.data) do
                local Possible = true
                ID = tostring(v.id)
                if tonumber(v.maxPlayers) > tonumber(v.playing) then
                    for _,Existing in pairs(AllIDs) do
                        if num ~= 0 then
                            if ID == tostring(Existing) then
                                Possible = false
                            end
                        else
                            if tonumber(actualHour) ~= tonumber(Existing) then
                                local delFile = pcall(function()
                                    -- delfile("NotSameServers.json")
                                    AllIDs = {}
                                    table.insert(AllIDs, actualHour)
                                end)
                            end
                        end
                        num = num + 1
                    end
                    if Possible == true then
                        table.insert(AllIDs, ID)
                        wait()
                        pcall(function()
                            -- writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
                            wait()
                            game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
                        end)
                        wait(4)
                    end
                end
            end
        end
        
        function redeemcodes()
            for i = 1, #codeTable do
                reps.Functions.RedeemCode:InvokeServer(codeTable[i])
            end
        end
        
        function buyback()
            for i = 1, 100 do
                reps.Events.PurchaseShopItem:FireServer("SurfaceBackpacks", i)
            end
        end
        
        function buypick()
            for i = 1, 100 do
                reps.Events.PurchaseShopItem:FireServer("SurfaceTools", i)
            end
        end
        
        function tp1(part,speed,location)
            local ts
            local tic_k = tick()
            local cframe = location
            local tween,err = pcall(function()
                ts = TweenService:Create(plr.Character.HumanoidRootPart,TweenInfo.new((plr.Character.HumanoidRootPart.Position - part.Position).magnitude / speed),{CFrame=cframe})
                ts:Play()
            end)
            if not tween then return err end
        end
        
        function tp2(speed,...)
            local ts2
            local tic_k = tick()
            local x = {...}
            local cframe = CFrame.new(x[1],x[2],x[3])
            local tween,err = pcall(function()
                ts2 = TweenService:Create(plr.Character.HumanoidRootPart,TweenInfo.new(speed),{CFrame=cframe})
                ts2:Play()
            end)
            if not tween then return err end
        end
        
        function petrarityToId()
            for i,v in next, plr.PlayerGui.ScreenGui.Inventory.Frame.Container.Pets.Content.Frame.Items:GetChildren() do
                if v.ClassName == "Frame" then
                    if v.Frame.Equipped.Visible == false and not v.Frame.ItemName:FindFirstChild("UIGradient") and table.find(getgenv().petraritytable, v:GetAttribute("Rarity")) then
                        return v.Name
                    end
                end
            end
        end
        
        -- Library
        
        local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/SxnwDev/UI/main/LiteUI.lua"))()
        local Notification = loadstring(game:HttpGet(("https://raw.githubusercontent.com/shlexware/Orion/main/source")))()
        
        
        library.Name = "Saza Hub v2"
        library.Version = 'v. 1.0.0'
        library.Icon = library.Icons['library']
        library.Parent = game.CoreGui
        
        library.Settings.AntiAFK = true
        library.Settings.prefix = Enum.KeyCode.RightShift
        library.Settings.Elements_Font = Enum.Font.SourceSans
        
        library:setTheme("Background", Color3.fromRGB(17, 14, 24)) 
        library:setTheme("Contrast", Color3.fromRGB(12, 2, 15)) 
        library:setTheme("DarkContrast", Color3.fromRGB(8, 0, 12)) 
        library:setTheme("Accent", Color3.fromRGB(255, 255, 255))
        
        
        local window = library:new({title = gameName.." [Saza Hub v2]", version = library.Version, icon = "http://www.roblox.com/asset/?id=9712403855"})
        
        local tab1 = window:addPage({icon = library.Icons["axe"], title = "Main"})
        
        
        local fsb = tab1:addSection({Divisions = 2})
        local tg  = tab1:addSection({Divisions = 1})
        
        
        -- Farming & Sell & Buy Section
        fsb:addLabel({Section = 1, text = '<font color="#' .. library.Settings.theme.Accent:ToHex() .. '"><b>Farming</b></font>', textxalignment = Enum.TextXAlignment.Center})
        
        fsb:addLabel({Section = 1, text = '<font color="#' .. library.Settings.theme.Accent:ToHex() .. '"><b>Mine</b></font>'})
        
        fsb:addToggle({Section = 1, title = "Auto Mine", callback = function(bool)
            getgenv().automine = bool
        
            while getgenv().automine do
                task.wait()
                tinggi = plr.PlayerGui.ScreenGui.HUD.Top.Bar.Inner.Arrow.Depth.Text
                local tinggi1 = string.gsub(tinggi, ",", "")
                local tinggi2 = string.gsub(tinggi1, "m", "")
                tinggi3 = tonumber(tinggi2)
                tinggi4 = tonumber(tinggi3 + 1)
                if getgenv().modefarm == "Earth" then
                    if plr.PlayerGui.ScreenGui.HUD.Top.Bar.Visible == true then
                        if tinggi3 < 108 then
                            reps.Events.MineBlock:FireServer(Vector3.new(math.random(1, 12), math.random(tinggi3, tinggi4), math.random(1, 12)))
                        elseif tinggi3 >= 108 then
                            reps.Events.MineBlock:FireServer(Vector3.new(math.random(4, 9), math.random(tinggi3, tinggi4), math.random(4, 9)))
                        end
                    else
                        reps.Events.MineBlock:FireServer(Vector3.new(math.random(1, 12), math.random(1, 2), math.random(1, 12)))
                    end
                elseif getgenv().modefarm == "Moon" then
                    if plr.PlayerGui.ScreenGui.HUD.Top.Bar.Visible == true then
                        if tinggi3 < 228 then
                            reps.Events.MineBlock:FireServer(Vector3.new(math.random(1741, 1752), math.random(tinggi3, tinggi4), math.random(1, 12)))
                        elseif tinggi3 >= 228 then
                            reps.Events.MineBlock:FireServer(Vector3.new(math.random(1744, 1749), math.random(tinggi3, tinggi4), math.random(4, 9)))
                        end
                    else
                        reps.Events.MineBlock:FireServer(Vector3.new(math.random(1741, 1752), math.random(1, 2), math.random(1, 12)))
                    end
                end
            end
        end})
        
        fsb:addToggle({Section = 1, title = "Auto Nuke", callback = function(bool)
            getgenv().nuke = bool
        
            while getgenv().nuke do
                reps.Events.ThrowExplosive:FireServer(plr.Character.HumanoidRootPart.Position, Vector3.new(-0.8517764210700989, -0.5142312049865723, 0.100215382874012))
                task.wait(0.5)
            end
        end})
        
        fsb:addToggle({Section = 1, title = "Auto Rebirth", callback = function(bool)
            getgenv().rebirth = bool
        
            while getgenv().rebirth do
                task.wait() 
                reps.Events.Rebirth:FireServer()
            end
        end})
        
        fsb:addLabel({Section = 1, text = '<font color="#' .. library.Settings.theme.Accent:ToHex() .. '"><b>Chest</b></font>'})
        
        fsb:addDropdown({Section = 1, title = "Chests List", list = chestTable, callback = function(selected)
            getgenv().chestname = selected
        
        end})
        
        fsb:addToggle({Section = 1, title = "Tp To Chest", callback = function(bool)
            getgenv().chestfarm = bool
        
        
            noclipchest = game:GetService('RunService').Stepped:Connect(function()
                if getgenv().chestfarm == true then
                    for i, v in pairs(plr.Character:GetDescendants()) do
                        if v:IsA("BasePart") and v.CanCollide == true then
                            v.CanCollide = false
                            plr.Character.HumanoidRootPart.Velocity = Vector3.new(0, 0, 0)
                        end
                    end
                else
                    noclipchest:Disconnect()
                end
            end)
        
            tpchest = game:GetService("RunService").Heartbeat:Connect(function()
                if getgenv().chestfarm == true then
                    if not plr.Character.HumanoidRootPart:FindFirstChild("BodyVelocity") then
                        antifall = Instance.new("BodyVelocity", plr.Character.HumanoidRootPart)
                        antifall.Velocity = Vector3.new(0, 0, 0)
                    elseif plr.Character.HumanoidRootPart:FindFirstChild("BodyVelocity") then
                        if wrk.Chests:FindFirstChild(getgenv().chestname) then
                            if wrk.Chests[getgenv().chestname].Part.CFrame.X > 7600 then
                                if getgenv().modefarm == "Earth" then
                                    reps.Events.Teleport:FireServer("Cyber SewersSell")
                                    reps.Events.Teleport:FireServer("Surface")
                                elseif getgenv().modefarm == "Moon" then
                                    plr.Character.HumanoidRootPart.CFrame = plr.Character.HumanoidRootPart.CFrame * CFrame.new(0,wrk.Chests[getgenv().chestname].Part.CFrame.Y - plr.Character.HumanoidRootPart.CFrame.Y, 0)
                                    tp1(wrk.Chests[getgenv().chestname].Part,12,wrk.Chests[getgenv().chestname].Part.CFrame)
                                end
                            elseif wrk.Chests[getgenv().chestname].Part.CFrame.X < 7600 then
                                if getgenv().modefarm == "Moon" then
                                    reps.Events.Teleport:FireServer("Hidden TreasureSell")
                                    reps.Events.Teleport:FireServer("Surface")
                                elseif getgenv().modefarm == "Earth" then
                                    plr.Character.HumanoidRootPart.CFrame = plr.Character.HumanoidRootPart.CFrame * CFrame.new(0,wrk.Chests[getgenv().chestname].Part.CFrame.Y - plr.Character.HumanoidRootPart.CFrame.Y, 0)
                                    tp1(wrk.Chests[getgenv().chestname].Part,12,wrk.Chests[getgenv().chestname].Part.CFrame)
                                end
                            end
                        end
                    end
                elseif getgenv().chestfarm == false then 
                    tpchest:Disconnect()
                    antifall:Destroy()
                end
            end)
        end})
        
        fsb:addLabel({Section = 1, text = '<font color="#' .. library.Settings.theme.Accent:ToHex() .. '"><b>Sell</b></font>'})
        
        fsb:addDropdown({Section = 1, title = "Areas List", list = sellTable, callback = function(selected)
            getgenv().sellname = selected
        end})
        
        fsb:addToggle({Section = 1, title = "Auto Sell [Max]",  callback = function(bool)
            getgenv().sell = bool
            local x,y,z = plr.Character.HumanoidRootPart.CFrame.X,plr.Character.HumanoidRootPart.CFrame.Y,plr.Character.HumanoidRootPart.CFrame.Z
        
            while getgenv().sell do
                task.wait()
                if string.split(plr.Character.Backpack.Storage.StorageGui.Storage.Text, " / ")[1] == string.split(plr.Character.Backpack.Storage.StorageGui.Storage.Text, " / ")[2] then
                    reps.Events.Teleport:FireServer(getgenv().sellname.."Sell")
                    task.wait(0.1)
                    reps.Events.QuickSell:FireServer()
                    plr.Character.Humanoid.Jump = true        
                end
            end
        end})   
        
        fsb:addLabel({Section = 2, text = '<font color="#' .. library.Settings.theme.Accent:ToHex() .. '"><b>Buy</b></font>', textxalignment = Enum.TextXAlignment.Center})
        
        fsb:addLabel({Section = 2, text = '<font color="#' .. library.Settings.theme.Accent:ToHex() .. '"><b>Tools & Backpacks</b></font>'})
        
        
        fsb:addToggle({Section = 2, title = "Auto Buy Tools", callback = function(bool)
            getgenv().buytools = bool
        
            while getgenv().buytools do
                task.wait(1)
                buypick()
            end
        end})
        
        fsb:addToggle({Section = 2, title = "Auto Buy Backpacks", callback = function(bool)
            getgenv().buyback = bool
        
            while getgenv().buyback do
                task.wait(1)
                buyback()
            end
        end})
        
        fsb:addLabel({Section = 2, text = '<font color="#' .. library.Settings.theme.Accent:ToHex() .. '"><b>Egg</b></font>'})
        
        fsb:addDropdown({Section = 2, title = "Eggs List", list = eggTable, callback = function(selected)
            getgenv().eggname = string.split(selected, "-")[1]
        end})
        
        fsb:addDropdown({section = 2, title = "Egg Amount", list = {"Single", "Triple"}, callback = function(selected)
            if selected == "Single" then
                getgenv().eggamount = false
            elseif selected == "Triple" then
                getgenv().eggamount = true
            end
        end})
        
        fsb:addToggle({Section = 2, title = "Auto Buy Egg", callback = function(bool)
            getgenv().buyegg = bool
        
            noclipegg = game:GetService('RunService').Stepped:Connect(function()
                if getgenv().buyegg == true then
                    for i, v in pairs(plr.Character:GetDescendants()) do
                        if v:IsA("BasePart") and v.CanCollide == true then
                            v.CanCollide = false
                            plr.Character.HumanoidRootPart.Velocity = Vector3.new(0, 0, 0)
                        end
                    end
                else
                    noclipegg:Disconnect()
                end
            end)
        
            tpegg = game:GetService("RunService").Heartbeat:Connect(function()
                if getgenv().buyegg == true then
                    if getgenv().eggamount == true then
                        reps.Events.OpenEgg:FireServer(getgenv().eggname, true)
                    else
                        reps.Events.OpenEgg:FireServer(getgenv().eggname, false)
                    end
                    if wrk.Eggs[getgenv().eggname].EggName.CFrame.X > 7600 then
                        if getgenv().modefarm == "Earth" then
                            reps.Events.Teleport:FireServer("Cyber SewersSell")
                            reps.Events.Teleport:FireServer("Surface")
                        elseif getgenv().modefarm == "Moon" then
                            plr.Character.HumanoidRootPart.CFrame = plr.Character.HumanoidRootPart.CFrame * CFrame.new(0, wrk.Eggs[getgenv().eggname].EggName.CFrame.Y - plr.Character.HumanoidRootPart.CFrame.Y, 0)
                            tp1(wrk.Eggs[getgenv().eggname].EggName, 12, wrk.Eggs[getgenv().eggname].EggName.CFrame)
                        end
                    elseif wrk.Eggs[getgenv().eggname].EggName.CFrame.X < 7600 then
                        if getgenv().modefarm == "Moon" then
                            reps.Events.Teleport:FireServer("Hidden TreasureSell")
                            reps.Events.Teleport:FireServer("Surface")
                        elseif getgenv().modefarm == "Earth" then
                            plr.Character.HumanoidRootPart.CFrame = plr.Character.HumanoidRootPart.CFrame * CFrame.new(0, wrk.Eggs[getgenv().eggname].EggName.CFrame.Y - plr.Character.HumanoidRootPart.CFrame.Y, 0)
                            tp1(wrk.Eggs[getgenv().eggname].EggName, 12, wrk.Eggs[getgenv().eggname].EggName.CFrame)
                        end
                    end
                elseif getgenv().buyegg == false then
                    tpegg:Disconnect()
                end
            end)
        end})
        
        fsb:addLabel({Section = 2, text = '<font color="#' .. library.Settings.theme.Accent:ToHex() .. '"><b>Zones</b></font>', textxalignment = Enum.TextXAlignment.Center})
        
        fsb:addButton({Section = 2, title = "Unlock All Zones", callback = function()
            for i = 1, #areaTable do
                reps.Events.Teleport:FireServer(areaTable[i] .. "Sell")
            end
            reps.Events.Teleport:FireServer("The Overworld Surface".."Sell")
        end})
        
        fsb:addDropdown({Section = 2, title = "Zones List", list = sellTable, callback = function(selected)
            getgenv().areaname = selected
        end})
        
        fsb:addButton({Section = 2, title = "Tp To Zone", callback = function()
            reps.Events.Teleport:FireServer(getgenv().areaname.."Sell")
        end})
        
        
        tg:addLabel({Section = 1, text = '<font color="#' .. library.Settings.theme.Accent:ToHex() .. '"><b>Misc</b></font>', textxalignment = Enum.TextXAlignment.Center})
        
        tg:addLabel({Section = 1, text = '<font color="#' .. library.Settings.theme.Accent:ToHex() .. '"><b>Pets</b></font>'})
        
        tg:addToggle({Section = 1, title = "Auto Equip Best Pets", callback = function(bool)
            getgenv().equipbestpet = bool
        
            while getgenv().equipbestpet do
                task.wait(.5)
                reps.Events.EquipBestPets:FireServer()
            end
        end})
        
        tg:addDropdown({Section = 1, title = "Raritys List", list = {"Common", "Unique", "Rare", "Epic"}, multi = true, callback = function(selected)
            getgenv().petraritytable = selected
        end})
        
        tg:addToggle({Section = 1, title = "Auto Delete Pets", callback = function(bool)
            getgenv().deletepet = bool
        
            while getgenv().deletepet do
                task.wait(0.5)
                reps.Events.MultiDeletePets:FireServer({tostring(petrarityToId())})
            end
        end})
        
        
        
        
        tg:addLabel({Section = 1, text = '<font color="#' .. library.Settings.theme.Accent:ToHex() .. '"><b>Crates</b></font>'})
        
        tg:addDropdown({Section = 1, title = "Crates List", list = {"Basic Crate", "Exotic Crate", "Rare Crate"}, callback = function(selected)
            getgenv().cratename = selected
        end})
        
        tg:addToggle({Section = 1, title = "Auto Open Crate", callback = function(bool)
            getgenv().crate = bool
        
            while getgenv().crate do
                task.wait(0.3)
                reps.Events.OpenCrate:FireServer(getgenv().cratename)
            end
        end})
        
        
        tg:addLabel({Section = 1, text = '<font color="#' .. library.Settings.theme.Accent:ToHex() .. '"><b>Game</b></font>'})
        
        tg:addButton({Section = 1, title = "Load Ores", callback = function()
            if getgenv().modefarm == "Earth" then
                reps.Events.Teleport:FireServer("The Overworld SurfaceSell")
                reps.Events.Teleport:FireServer("Surface")
                wait()
                tp2(20, 0, -10000, 0)
            elseif getgenv().modefarm == "Moon" then
                reps.Events.Teleport:FireServer("Cyber Galaxy SurfaceSell")
                reps.Events.Teleport:FireServer("Surface")
                wait()
                tp2(20, 8693, -7000, 6)
            end
        end})
        
        
        tg:addButton({Section = 1, title = "Redeem All Codes", callback = function()
            redeemcodes()
        end})
        
        tg:addLabel({Section = 1, text = '<font color="#' .. library.Settings.theme.Accent:ToHex() .. '"><b>Server</b></font>'})
        
        tg:addButton({Section = 1, title = "Rejoin", callback = function()
            game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId, game.JobId, plr)
        end})
        
        tg:addButton({Section = 1, title = "Server Hop", callback = function()
            while wait() do
                pcall(function()
                    shop()
                    if foundAnything ~= "" then
                        shop()
                        print("Teleporting to another server please wait.")
                    end
                end)
            end
        end})
        
        tg:addLabel({Section = 1, text = '<font color="#' .. library.Settings.theme.Accent:ToHex() .. '"><b>Game Info</b></font>', textxalignment = Enum.TextXAlignment.Center})
        
        tg:addLabel({Section = 1, text = '<font color="#' .. library.Settings.theme.Accent:ToHex() .. '"><b> Danger Meter :</b></font>'})
        
        dtext = tg:addLabel({Section = 1, text = wrk.Worlds["The Overworld"].Sign.Display.SurfaceGui.Info.Text})
        
        tg:addLabel({Section = 1, text = '<font color="#' .. library.Settings.theme.Accent:ToHex() .. '"><b> Next Rebirth Cost :</b></font>'})
        
        rtext = tg:addLabel({Section = 1, text =  "Cost : "..plr.PlayerGui.ScreenGui.Rebirth.Frame.Buy.Frame.Container.Label.Text})
        
        Notification:MakeNotification(
            {
                Name = "Credits :",
                Content = "----------------------------------------\n-Ui Made By : Premier X\n-Made By : ~Saza Software~\n -Founder : Zaaa 愛#1831\n -Onwer : Saskai#2799\n -Developer : Ikky#8337\n -Staff : Fath#2767\n -Manager : Linest#9286",
                Image = "http://www.roblox.com/asset/?id=9712403855",
                Time = 10
            }
        )
        
        -- Another Function
        
        task.spawn(
            function()
                while true do
                    dtext.Update({text = wrk.Worlds["The Overworld"].Sign.Display.SurfaceGui.Info.Text})
                    rtext.Update({text = "Cost : "..plr.PlayerGui.ScreenGui.Rebirth.Frame.Buy.Frame.Container.Label.Text})
                    plr.Character.Head.PlayerTitle.Username.Text = "Saza Hub V2 [Mining Simulator 2]~"
                    if plr.Character.HumanoidRootPart.CFrame.X > 7600 then
                        getgenv().modefarm = "Moon"
                    elseif plr.Character.HumanoidRootPart.CFrame.X < 7600 then
                        getgenv().modefarm = "Earth"
                    end
                    if Moddd.fromPlayer(plr) == "The Overworld" then
                        Modd("The Overworld")
                    elseif Moddd.fromPlayer(plr) == "Cyber Galaxy" then
                        Modd("Cyber Galaxy")
                    end
                    for i,v in next, plr.PlayerGui.ScreenGui.Inventory.Frame.Container.Pets.Content.Frame.Items:GetChildren() do
                        if v.ClassName == "Frame" then
                            if not v:GetAttribute("Rarity") and not v.Frame.ItemName:FindFirstChild("UIGradient") then
                                if v.Frame.ItemName.TextColor3 == Color3.fromRGB(255,255,255) then
                                    v:SetAttribute("Rarity", "Common")
                                elseif v.Frame.ItemName.TextColor3 == Color3.fromRGB(255,227,188) then
                                    v:SetAttribute("Rarity", "Unique")
                                elseif v.Frame.ItemName.TextColor3 == Color3.fromRGB(255,100,100) then
                                    v:SetAttribute("Rarity", "Rare")
                                elseif v.Frame.ItemName.TextColor3 == Color3.fromRGB(176,107,255) then
                                    v:SetAttribute("Rarity", "Epic")
                                end
                            end
                        end
                    end
                    task.wait()
                end
            end
        )        
        print("Passed")
    end
 end
 
 if game:GetService("CoreGui"):FindFirstChild("ScreenMainKey") then
    game:GetService("CoreGui"):FindFirstChild("ScreenMainKey"):Destroy()
 end
 local UIS = game:GetService("UserInputService")
 local GuiService = game:GetService("GuiService")
 if UIS.TouchEnabled and not UIS.KeyboardEnabled and not UIS.MouseEnabled and not UIS.GamepadEnabled and not GuiService:IsTenFootInterface() then
    Mobile = true
 end
 
 if not Mobile then
    if getgenv().Allow == nil then
        local AntiFunc = {
            ["print"] = print,
            ["warn"] = warn,
            ["rconsoleprint"] = rconsoleprint,
            ["rconsolewarn"] = rconsolewarn,
            ["rconsoleinfo"] = rconsoleinfo,
            ["rconsoleinput"] = rconsoleinput,
            ["rconsoleinputasync"] = rconsoleinputasync,
            ["rconsoleerr"] = rconsoleerr,
            ["rconsolename"] = rconsolename,
            ["replaceclosure"] = replaceclosure,
            ["hookfunction"] = hookfunction,
            ["setreadonly"] = setreadonly,
            ["clonefunction"] = clonefunction,
            ["newcclosure"] = newcclosure,
            ["hookfunc"] = hookfunc
        }
    
        if getgenv().Allow == nil then
            getgenv().Allow = false
        end
    
        if print then
        local aq;
        aq = hookfunc(print, function(...)
            if getgenv().Allow then
                return aq(...)
            end
            return aq('Top secret')
        end)
        end
        if warn then
        local aw;
        aw = hookfunc(warn, function(...)
            if getgenv().Allow then
                return aw(...)
            end
            return aw('Top secret')
        end)
        end
        if rconsoleprint then
        local ae;
        ae = hookfunc(rconsoleprint, function(...)
            if getgenv().Allow then
                return ae(...)
            end
            return ae('Top secret')
        end)
        end
        if rconsolewarn then
        local ar;
        ar = hookfunc(rconsolewarn, function(...)
            if getgenv().Allow then
                return ar(...)
            end
            return ar('Top secret')
        end)
        end
        if rconsoleinfo then
        local at;
        at = hookfunc(rconsoleinfo, function(...)
            if getgenv().Allow then
                return at(...)
            end
            return at('Top secret')
        end)
        end
        if rconsoleinputasync then
            local au;
            au = hookfunc(rconsoleinputasync, function(...)
                if getgenv().Allow then
                    return au(...)
                end
                return au('Top secret')
            end)
        end
        if rconsoleerr then
        local ai;
        ai = hookfunc(rconsoleerr, function(...)
            if getgenv().Allow then
                return ai(...)
            end
            return ai('Top secret')
        end)
        end
        if rconsolename then
        local ao;
        ao = hookfunc(rconsolename, function(...)
            if getgenv().Allow then
                return ao(...)
            end
            return ao('Top secret')
        end)
        end
        if replaceclosure then
        local ap;
        ap = hookfunc(replaceclosure, function(...)
            if getgenv().Allow then
                return ap(...)
            end
            return
        end)
        end
        if hookfunction then
        local av;
        av = hookfunc(hookfunction, function(...)
            if getgenv().Allow then
                return av(...)
            end
            return 
        end)
        end
        local as;
        as = hookfunc(setreadonly, function(...)
            if getgenv().Allow then
                return as(...)
            end
            return 
        end)
        if type(clonefunction) == 'function' then
        local ad
        ad = hookfunc(clonefunction, function(...)
            return 
        end)
        end
        local ag;
        ag = hookfunc(newcclosure, function(...)
            if getgenv().Allow then
                return ag(...)
            end
            return 
        end)
    
        getgenv().print = function(...)
            if getgenv().Allow then
                return AntiFunc["print"](...)
            end
            return AntiFunc["print"]('Top secret')
        end
        getgenv().warn = function(...)
            if getgenv().Allow then
                return AntiFunc["warn"](...)
            end
            return AntiFunc["warn"]('Top secret')
        end
        getgenv().rconsoleprint = function(...)
            if getgenv().Allow then
                return AntiFunc["rconsoleprint"](...)
            end
            return AntiFunc["rconsoleprint"]('Top secret')
        end
        getgenv().rconsolewarn = function(...)
            if getgenv().Allow then
                return AntiFunc["rconsolewarn"](...)
            end
            return AntiFunc["rconsolewarn"]('Top secret')
        end
        getgenv().rconsoleinfo = function(...)
            if getgenv().Allow then
                return AntiFunc["rconsoleinfo"](...)
            end
            return AntiFunc["rconsoleinfo"]('Top secret')
        end
        getgenv().rconsoleinput = function(...)
            if getgenv().Allow then
                return AntiFunc["rconsoleinput"](...)
            end
            return AntiFunc["rconsoleinput"]('Top secret')
        end
        getgenv().rconsoleinputasync = function(...)
            if getgenv().Allow then
                return AntiFunc["rconsoleinputasync"](...)
            end
            return AntiFunc["rconsoleinputasync"]('Top secret')
        end
        getgenv().rconsoleerr = function(...)
            if getgenv().Allow then
                return AntiFunc["rconsoleerr"](...)
            end
            return AntiFunc["rconsoleerr"]('Top secret')
        end
        getgenv().rconsolename = function(...)
            if getgenv().Allow then
                return AntiFunc["rconsolename"](...)
            end
            return AntiFunc["rconsolename"]('Top secret')
        end
        getgenv().replaceclosure = function(...)
            if getgenv().Allow then
                return AntiFunc["replaceclosure"](...)
            end
            return
        end
        getgenv().hookfunction = function(...)
            if getgenv().Allow then
                return AntiFunc["hookfunction"](...)
            end
            return 
        end
        getgenv().setreadonly = function(...)
            if getgenv().Allow then
                return AntiFunc["setreadonly"](...)
            end
            return 
        end
        if type(clonefunction) == 'function' then
        getgenv().clonefunction = function(...)
            return 
        end
        end
        getgenv().newcclosure = function(...)
            if getgenv().Allow then
                return AntiFunc["newcclosure"](...)
            end
            return
        end
        getgenv().hookfunc = function(...)
            if getgenv().Allow then
                return AntiFunc["hookfunc"](...)
            end
            return
        end
    end
 end
 local u1 = loadstring(game:HttpGet"https://raw.githubusercontent.com/xQuartyx/DonateMe/main/Tea")()
 local http_request = http_request
 if syn then 
    http_request = syn.request
 elseif SENTINEL_V2 then
    http_request = request 
 end
 
 local getservice = game.GetService
 local httpservice = getservice(game, "HttpService")
 
 local function http_request_get(url, headers) 
    return http_request({Url=url,Method="GET",Headers=headers or nil}).Body 
 end
 
 local function jsondecode(json)
   local jsonTable = {}
    pcall(function() jsonTable = httpservice.JSONDecode(httpservice,json) end)
   return jsonTable
 end
 
 local chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'
 local length = 50
 local randomString = ''
 
 charTable = {}
 for c in chars:gmatch"." do
    table.insert(charTable, c)
 end
 
 for i = 1, length do
    randomString = randomString .. charTable[math.random(1, #charTable)]
 end
 
 local b='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/' -- You will need this for encoding/decoding
 -- encoding
 function enc(data)
    return ((data:gsub('.', function(x) 
        local r,b='',x:byte()
        for i=8,1,-1 do r=r..(b%2^i-b%2^(i-1)>0 and '1' or '0') end
        return r;
    end)..'0000'):gsub('%d%d%d?%d?%d?%d?', function(x)
        if (#x < 6) then return '' end
        local c=0
        for i=1,6 do c=c+(x:sub(i,i)=='1' and 2^(6-i) or 0) end
        return b:sub(c+1,c+1)
    end)..({ '', '==', '=' })[#data%3+1])
 end
 
 -- decoding
 function dec(data)
    data = string.gsub(data, '[^'..b..'=]', '')
    return (data:gsub('.', function(x)
        if (x == '=') then return '' end
        local r,f='',(b:find(x)-1)
        for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
        return r;
    end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
        if (#x ~= 8) then return '' end
        local c=0
        for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
            return string.char(c)
    end))
 end
 getgenv().Allow = false
 local body = http_request_get('https://httpbin.org/get')
 local decoded = jsondecode(body)
 local hwid_list = {"Syn-Fingerprint", "Exploit-Guid", "Proto-User-Identifier", "Sentinel-Fingerprint", "Krnl-Hwid"};
 local hwid = "";
 
 for i, v in next, hwid_list do
    if decoded.headers[v] then
        hwid = decoded.headers[v];
        break
    end
 end
 
 local getdata = game:HttpGet("https://dailypastebin.com/checkkey.php")
 local getuser = game:HttpGet("https://dailypastebin.com/getclient.php")
 local getdate = game:HttpGet("https://dailypastebin.com/getdate.php"):split(' ')[1]
 local InvaildReason = {
    "Invaild Key",
    "The key has Expired, Please get a new key.",
    "Not Found Key",
    "c422bab74353b04affafb6842bc6267acf911d2c21f01a3424a0fda117c10581",
    "3012ced70d4048343d668f50c4171c639c241859f49b99e665e4d614fd2a2add",
    "75fdc025aca09f05ca54cbf0f42c980c62b8ae64df70b83c44c7df3d5633d503"
 }
 
 local random = randomString
 local KeyHash = enc(SZKey)
 
 local data = jsondecode(http_request_get("https://Key-System.sztean.repl.co/index.php?key=".. KeyHash .."&random="..random))
 
 if data.Key == KeyHash and table.find(InvaildReason, getdata) then
    if data.Blacklist == "False" then
        if data.Hwid == Hwid or "Unknown" then
            if data.Random == random then
                if data.Hwid == "Unknown" then
                    -- update hwid
                    getgenv().Allow = true
                    print("Whitelist !!!")
                    wait(0.2)
                    getgenv().Allow = false
                    wait(0.2)
                    http_request_get("https://Key-System.sztean.repl.co/changehwid.php?key=".. KeyHash .."&hwid="..hwid)
                    getgenv().Allow = true
                    print("Update Hwid")
                    print('Client Authenticated.')
                    u21312(false, true, "Gay")
                else
                    -- no update hwid
                    getgenv().Allow = true
                    print('Client Authenticated.')
                    u21312(false, true, "Gay")
                    print("Whitelist !!!")
                end
            else
                warn("Invalid Random")
            end
        else
            warn("Invalid Hwid")
        end
    else
        warn("Blacklist Reason : "..data.Reason)
    end
 elseif data.Key ~= KeyHash and not table.find(InvaildReason, getdata) and getdata:find(u1((getuser..getdate):gsub("\n",""))) then
    getgenv().Allow = true
    print('Client Not Authenticated.')
    u21312(false, true, "Gay")
 elseif data.Key ~= KeyHash and table.find(InvaildReason, getdata) and not getdata:find(u1((getuser..getdate):gsub("\n",""))) then
    getgenv().Allow = true
    local TweenService = game:GetService("TweenService")
    local UserInputService = game:GetService("UserInputService")
    local ScreenMainKey = Instance.new("ScreenGui")
    local BackGround = Instance.new('Frame')
    local BackGroundCorner = Instance.new('UICorner')
    local MainFrame = Instance.new("Frame")
    local CornerMain = Instance.new("UICorner")
    local Main2Frame = Instance.new("Frame")
    local CornerMain2 = Instance.new("UICorner")
    local SazaHubText = Instance.new("TextLabel")
    local AuthenticationText = Instance.new("TextLabel")
    local SZLogo = Instance.new("ImageLabel")
    local AuthTextbox = Instance.new("TextBox")
    local LineTextBox = Instance.new("Frame")
    local AuthButton = Instance.new("TextButton")
    local UICorner = Instance.new("UICorner")
    local JoinDiscordButton = Instance.new("TextButton")
    local UICorner1 = Instance.new("UICorner")
    local HowtogetkeyLabel = Instance.new("TextLabel")
    local Line1Left = Instance.new("Frame")
    local Line2Left = Instance.new("Frame")
    local Line1Right = Instance.new("Frame")
    local Line2Right = Instance.new("Frame")
    local Line3Down = Instance.new("Frame")
 
 
    function Ripple(Object)
        spawn(function()
            local Circle = Instance.new("ImageLabel")
            local Mouse = game:GetService("Players").LocalPlayer:GetMouse()
            Circle.Parent = Object
            Circle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Circle.BackgroundTransparency = 1.000
            Circle.ZIndex = 10
            Circle.Image = "rbxassetid://266543268"
            Circle.ImageColor3 = Color3.fromRGB(210,210,210)
            Circle.ImageTransparency = 0.8
            Circle.Position = UDim2.new(0, Mouse.X - Circle.AbsolutePosition.X, 0, Mouse.Y - Circle.AbsolutePosition.Y)
            local Size = Object.AbsoluteSize.X
            TweenService:Create(Circle, TweenInfo.new(0.5), {Position = UDim2.fromScale(math.clamp(Mouse.X - Object.AbsolutePosition.X, 0, Object.AbsoluteSize.X)/Object.AbsoluteSize.X,Object,math.clamp(Mouse.Y - Object.AbsolutePosition.Y, 0, Object.AbsoluteSize.Y)/Object.AbsoluteSize.Y) - UDim2.fromOffset(Size/2,Size/2), ImageTransparency = 1, Size = UDim2.fromOffset(Size,Size)}):Play()
            spawn(function()
                wait(0.5)
                Circle:Destroy()
            end)
        end)
    end
 
    local function MakeDraggable(topbarobject, object)
        local Dragging = nil
        local DragInput = nil
        local DragStart = nil
        local StartPosition = nil
 
        local function Update(input)
            local Delta = input.Position - DragStart
            local pos = UDim2.new(StartPosition.X.Scale, StartPosition.X.Offset + Delta.X, StartPosition.Y.Scale, StartPosition.Y.Offset + Delta.Y)
            local Tween = TweenService:Create(object, TweenInfo.new(0.15), {Position = pos})
            Tween:Play()
        end
 
        topbarobject.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                Dragging = true
                DragStart = input.Position
                StartPosition = object.Position
                input.Changed:Connect(function()
                    if input.UserInputState == Enum.UserInputState.End then
                        Dragging = false
                    end
                end)
            end
        end)
 
        topbarobject.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                DragInput = input
            end
        end)
 
        UserInputService.InputChanged:Connect(function(input)
            if input == DragInput and Dragging then
                Update(input)
            end
        end)
    end
 
 
    ScreenMainKey.Name = "ScreenMainKey"
    ScreenMainKey.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    ScreenMainKey.Parent = game:GetService("CoreGui")
 
    BackGround.Name = 'BackGround'
    BackGround.Size = UDim2.new(5, 0, 5, 0)
    BackGround.Position = UDim2.new(0, 0, -0.007017544005066156, 0)
    BackGround.BackgroundTransparency = 0.30000000298023224
    BackGround.BorderSizePixel = 0
    BackGround.ClipsDescendants = true
    BackGround.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    BackGround.AnchorPoint = Vector2.new(0.5, 0.5)  
    BackGround.Parent = ScreenMainKey
 
    BackGroundCorner.Name = 'BackGroundCorner'
    BackGroundCorner.CornerRadius = UDim.new(0, 10)
    BackGroundCorner.Parent = BackGround
    
    MainFrame.Name = "MainFrame"
    MainFrame.Size = UDim2.new(0, 466, 0, 579)
    MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
    MainFrame.Position = UDim2.new(0.45, 0, 0.5, 0)
    MainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    MainFrame.Parent = ScreenMainKey
    
    CornerMain.Name = "CornerMain"
    CornerMain.CornerRadius = UDim.new(0, 10)
    CornerMain.Parent = MainFrame
    
    Main2Frame.Name = "Main2Frame"
    Main2Frame.Size = UDim2.new(0, 435, 0, 546)
    Main2Frame.Position = UDim2.new(0.0331835, 0, 0.0267861, 0)
    Main2Frame.BackgroundColor3 = Color3.fromRGB(42, 42, 42)
    Main2Frame.Parent = MainFrame
    
    CornerMain2.Name = "CornerMain2"
    CornerMain2.Parent = Main2Frame
 
    MakeDraggable(MainFrame, MainFrame)
    
    SazaHubText.Name = "SazaHubText"
    SazaHubText.Size = UDim2.new(0, 200, 0, 50)
    SazaHubText.BackgroundTransparency = 1
    SazaHubText.Position = UDim2.new(0.2689655, 0, 0.0152838, 0)
    SazaHubText.BorderSizePixel = 0
    SazaHubText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    SazaHubText.FontSize = Enum.FontSize.Size48
    SazaHubText.TextSize = 45
    SazaHubText.TextColor3 = Color3.fromRGB(255, 255, 255)
    SazaHubText.Text = "Saza Hub"
    SazaHubText.Font = Enum.Font.Gotham
    SazaHubText.Parent = Main2Frame
    
    AuthenticationText.Name = "AuthenticationText"
    AuthenticationText.Size = UDim2.new(0, 200, 0, 50)
    AuthenticationText.BackgroundTransparency = 1
    AuthenticationText.Position = UDim2.new(0.2505747, 0, 0.0873362, 0)
    AuthenticationText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    AuthenticationText.FontSize = Enum.FontSize.Size18
    AuthenticationText.TextSize = 15
    AuthenticationText.TextColor3 = Color3.fromRGB(255, 255, 255)
    AuthenticationText.Text = "Authentication"
    AuthenticationText.Font = Enum.Font.Code
    AuthenticationText.Parent = Main2Frame
    
    SZLogo.Name = "SZLogo"
    SZLogo.Size = UDim2.new(0, 203, 0, 172)
    SZLogo.BackgroundTransparency = 1
    SZLogo.Position = UDim2.new(0.2505747, 0, 0.1865736, 0)
    SZLogo.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    SZLogo.Image = "http://www.roblox.com/asset/?id=9712403855"
    SZLogo.Parent = Main2Frame
    
    AuthTextbox.Name = "AuthTextbox"
    AuthTextbox.Size = UDim2.new(0, 344, 0, 61)
    AuthTextbox.BackgroundTransparency = 1
    AuthTextbox.Position = UDim2.new(0.1034483, 0, 0.5227261, 0)
    AuthTextbox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    AuthTextbox.FontSize = Enum.FontSize.Size18
    AuthTextbox.TextSize = 14
    AuthTextbox.TextColor3 = Color3.fromRGB(248, 248, 248)
    AuthTextbox.Text = "Authentication Key"
    AuthTextbox.Font = Enum.Font.Code
    AuthTextbox.TextXAlignment = Enum.TextXAlignment.Left
    AuthTextbox.Parent = Main2Frame
 
    LineTextBox.Name = "LineTextBox"
    LineTextBox.Size = UDim2.new(0, 344, 0, 1)
    LineTextBox.Position = UDim2.new(0.1034483, 0, 0.6101481, 0)
    LineTextBox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    LineTextBox.Parent = Main2Frame
    
    AuthButton.Name = "AuthButton"
    AuthButton.Size = UDim2.new(0, 344, 0, 39)
    AuthButton.Position = UDim2.new(0.1034483, 0, 0.6359439, 0)
    AuthButton.BackgroundColor3 = Color3.fromRGB(102, 102, 102)
    AuthButton.FontSize = Enum.FontSize.Size24
    AuthButton.TextSize = 20
    AuthButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    AuthButton.Text = "Authenticate"
    AuthButton.Font = Enum.Font.SourceSansBold
    AuthButton.Parent = Main2Frame
    
    UICorner.Parent = AuthButton
    
    JoinDiscordButton.Name = "JoinDiscordButton"
    JoinDiscordButton.Size = UDim2.new(0, 230, 0, 39)
    JoinDiscordButton.Position = UDim2.new(0.2344828, 0, 0.8401176, 0)
    JoinDiscordButton.BackgroundColor3 = Color3.fromRGB(1, 103, 255)
    JoinDiscordButton.FontSize = Enum.FontSize.Size24
    JoinDiscordButton.TextSize = 20
    JoinDiscordButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    JoinDiscordButton.Text = "Copy Link & Join Discord Saza"
    JoinDiscordButton.Font = Enum.Font.SourceSansBold
    JoinDiscordButton.Parent = Main2Frame
    
    UICorner1.Parent = JoinDiscordButton
    
    HowtogetkeyLabel.Name = "HowtogetkeyLabel"
    HowtogetkeyLabel.Size = UDim2.new(0, 184, 0, 50)
    HowtogetkeyLabel.BackgroundTransparency = 1
    HowtogetkeyLabel.Position = UDim2.new(0.2873563, 0, 0.7472528, 0)
    HowtogetkeyLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    HowtogetkeyLabel.FontSize = Enum.FontSize.Size18
    HowtogetkeyLabel.TextSize = 15
    HowtogetkeyLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    HowtogetkeyLabel.Text = "How To Get Key?"
    HowtogetkeyLabel.Font = Enum.Font.Code
    HowtogetkeyLabel.Parent = Main2Frame
    
    Line1Left.Name = "Line1Left"
    Line1Left.Size = UDim2.new(0, 46, 0, 1)
    Line1Left.Position = UDim2.new(0.1977012, 0, 0.7948718, 0)
    Line1Left.BorderSizePixel = 0
    Line1Left.BackgroundColor3 = Color3.fromRGB(90, 90, 90)
    Line1Left.Parent = Main2Frame
    
    Line2Left.Name = "Line2Left"
    Line2Left.Size = UDim2.new(0, 1, 0, 77)
    Line2Left.Position = UDim2.new(0.1977012, 0, 0.7948718, 0)
    Line2Left.BorderSizePixel = 0
    Line2Left.BackgroundColor3 = Color3.fromRGB(90, 90, 90)
    Line2Left.Parent = Main2Frame
    
    Line1Right.Name = "Line1Right"
    Line1Right.Size = UDim2.new(0, 46, 0, 1)
    Line1Right.Position = UDim2.new(0.6896552, 0, 0.7930403, 0)
    Line1Right.BorderSizePixel = 0
    Line1Right.BackgroundColor3 = Color3.fromRGB(90, 90, 90)
    Line1Right.Parent = Main2Frame
    
    Line2Right.Name = "Line2Right"
    Line2Right.Size = UDim2.new(0, 1, 0, 78)
    Line2Right.Position = UDim2.new(0.7954023, 0, 0.7930402, 0)
    Line2Right.BorderSizePixel = 0
    Line2Right.BackgroundColor3 = Color3.fromRGB(90, 90, 90)
    Line2Right.Parent = Main2Frame
 
    Line3Down.Name = "Line3Down"
    Line3Down.Size = UDim2.new(0, 260, 0, 1)
    Line3Down.Position = UDim2.new(0.2, 0, 0.9340659, 0)
    Line3Down.BorderSizePixel = 0
    Line3Down.BackgroundColor3 = Color3.fromRGB(90, 90, 90)
    Line3Down.Parent = Main2Frame
    
    AuthButton.MouseEnter:Connect(function(...)
        LoopSubmit = true
    end)
    AuthButton.MouseLeave:Connect(function(...)
        LoopSubmit = false
    end)
    AuthButton.MouseButton1Click:Connect(function()
        if AuthenticationText.Text ~= "Checking Key🗝" then
            local text = AuthTextbox.Text:gsub(" ","")
            if text == "" then
                return 
            end
            getgenv().Allow = false
            Ripple(AuthButton)
            AuthenticationText.Text = "Checking Key🔑"
            getdata = game:HttpGet("https://dailypastebin.com/checkkey.php")
            getdata2 = game:HttpGet("https://dailypastebin.com/checkkey.php")
            
            if getdata ~= "c422bab74353b04affafb6842bc6267acf911d2c21f01a3424a0fda117c10581" then
                if getdata ~= "3012ced70d4048343d668f50c4171c639c241859f49b99e665e4d614fd2a2add" then
                    if getdata ~= "75fdc025aca09f05ca54cbf0f42c980c62b8ae64df70b83c44c7df3d5633d503" then
                        if getdata:find(text) and getdata ~= getdata2 then
                        AuthenticationText.Text = "Correct Key ✅"
                        wait(1)
                        ScreenMainKey:Destroy()
                        getgenv().Allow = true
                        u21312(false, true, "Gay")
                        end
                    else
                        Title.Text = "The key has Expired, Please get a new key."
                    end
                else
                    Title.Text = "Invaild Key"
                end
            else
                Title.Text = "Not Found Key"
            end
            wait(2)
            AuthenticationText.Text = "Authenticate"
        end
    end)
 
    JoinDiscordButton.MouseEnter:Connect(function()
        LoopLink = true
    end)
    JoinDiscordButton.MouseLeave:Connect(function()
        LoopLink = false
    end)
    JoinDiscordButton.MouseButton1Click:Connect(function()
        getgenv().Allow = true
        Ripple(JoinDiscordButton)
        setclipboard('https://dailypastebin/getkey.php')
        AuthenticationText.Text = "   Copy Success ✅, Direct to Saza Discord in 2 Second"
        wait(1)
        AuthenticationText.Text = "   Copy Success ✅, Direct to Saza Discord in 1 Second"
        wait(1)
        getgenv().Allow = false
        wait(2)
        local request = (syn and syn.request) or (http and http.request) or http_request
 
        if request then
            request(
                {
                    Url = "http://127.0.0.1:6463/rpc?v=1",
                    Method = "POST",
                    Headers = {
                        ["Content-Type"] = "application/json",
                        ["Origin"] = "https://discord.com"
                    },
                    Body = game:GetService("HttpService"):JSONEncode(
                        {
                            cmd = "INVITE_BROWSER",
                            args = {code = "saza"},
                            nonce = game:GetService("HttpService"):GenerateGUID(false)
                        }
                    )
                }
            )
        end
        AuthenticationText.Text = "Authenticate"
    end)
 
    AuthTextbox.Focused:Connect(function()
        LoopBox = true
    end)
    AuthTextbox.FocusLost:Connect(function(ep)
        LoopBox = false
        if ep then
            if #AuthTextbox.Text > 0 then
                pcall(callback, AuthTextbox.Text)
            end
        end
    end)
    warn("Key Not Found")
 end
